import "stack"
import "io"

def map(input arr, fn fun) arr {
  const result arr = []
  for mut i num = 0, ~input - 1 {
    result[~result] = fn(input[i], i)
  }
  return result
}

def reverse(input arr) arr {
  const result arr = []
  for mut i num = ~input - 1, 0, -1 {
    result[~result] = input[i]
  }
  return result
}

def clone(array arr) {
  const result arr = []
  for mut i num = 0, ~array - 1 {
    result[~result] = array[i]
  }
  return result
}

def flatten(input arr) arr {
  const result arr = []
  mut s arr = reverse(input)

  for ~s != 0 {
    const el any = s[~s -1]
    s = stack::pop(s)

    if el is arr {
      for mut i num = ~el - 1, 0, -1 {
        s = stack::add(s, el[i])
      }
    } else {
      result[~result] = el
    }
  }

  return result
}

pub {
  map
  reverse
  clone
  flatten
}
